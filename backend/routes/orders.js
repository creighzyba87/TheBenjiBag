import express from 'express'; import { db } from '../db/index.js'; import jwt from 'jsonwebtoken'; import crypto from 'crypto';
const router=express.Router(); const JWT_SECRET=process.env.JWT_SECRET||'change_me';
function auth(req,res,next){const h=req.headers.authorization||'';const t=h.startsWith('Bearer ')?h.slice(7):null;if(!t)return res.status(401).json({error:'No token'});try{req.user=jwt.verify(t,JWT_SECRET);next();}catch{return res.status(401).json({error:'Invalid token'});}}
function totalOz(items){return (items||[]).reduce((s,i)=>s+(i.ounces||0),0);}
router.get('/inventory',async(_req,res)=>{await db.read();res.json(db.data.inventory)});
router.post('/draft',auth,async(req,res)=>{const {items,address}=req.body;if(!Array.isArray(items)||!items.length)return res.status(400).json({error:'Items required'});const oz=totalOz(items);if(oz<1||oz>4)return res.status(400).json({error:'Total ounces must be 1..4'});await db.read();const id=crypto.randomUUID();db.data.orders.push({id,userId:req.user.sub,items,totalOz:oz,address,window:{start:null,end:null,confirmed:false},etaMins:null,status:'draft',createdAt:new Date().toISOString()});await db.write();res.json({id});});
router.post('/:id/window',auth,async(req,res)=>{const {id}=req.params;const {start,end}=req.body;await db.read();const o=db.data.orders.find(x=>x.id===id&&x.userId===req.user.sub);if(!o)return res.status(404).json({error:'Not found'});if(o.status!=='draft')return res.status(409).json({error:'Only draft'});o.window={start,end,confirmed:false};await db.write();res.json({ok:true});});
router.post('/:id/submit',auth,async(req,res)=>{const {id}=req.params;await db.read();const o=db.data.orders.find(x=>x.id===id&&x.userId===req.user.sub);if(!o)return res.status(404).json({error:'Not found'});if(!o.window?.start)return res.status(400).json({error:'Window not selected'});o.etaMins=45;o.status='submitted';o.window.confirmed=true;await db.write();res.json({ok:true,etaMins:o.etaMins});});
export default router;